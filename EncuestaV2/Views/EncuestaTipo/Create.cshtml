@model EncuestaV2.Data.EncuestaTipo
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";


}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
        <div class="form-horizontal">

            @*<img src="~/Content/img/img-aviso-02.jpg" />*@

            <h4>EncuestaTipo</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" ,  @required = "required" }  })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.FechaCreacion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FechaCreacion, new { htmlAttributes = new { @class = "form-control" } })

                        @Html.ValidationMessageFor(model => model.FechaCreacion, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Activo)
                        @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger"  })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TiempoActivo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.TiempoActivo)
                        @Html.ValidationMessageFor(model => model.TiempoActivo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Tiempo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Tiempo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tiempo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div>
                <label>LINK PUBLICO</label>
                <input type="text" id="Link" name="Link" size="40" required readonly="readonly">
                <a class="btn btn-primary" onclick="GenerateLink();">Generar Link</a>
            </div>
            <div>
                <label>LINK PRIVADO</label>
                <input type="text" id="Link2" name="Link" size="40" required readonly="readonly">
                <a class="btn btn-primary" onclick="GenerateLink2();">Generar Link</a>
            </div>
            @*<div class="form-group">
                    @Html.LabelFor(model => model.FechaCambio, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FechaCambio, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FechaCambio, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            <input type="button" name="selectall" id="selectall" value="Seleccionar Todos" class="btn btn-primary" />
            <input type="button" name="selectall" id="deselectall" value="Limpiar Seleccion" class="btn btn-primary" />

            <div class="container overflow-hidden">
                <ul class="">
                    @{
                        int pos = 1;
                        foreach (var item in ViewBag.Certezas)
                        {
                            <li class="list-group-item w-50 float-left">
                                @item.AreaConocimiento
                                <label class="switch ">
                                    <input type="checkbox" name="certezas" id="certezas[@item.IdCerteza]" class="success" value="@item.IdCerteza">
                                    <span class="slider"></span>

                                </label>
                            </li>
                            pos++;
                        }
                    }
                </ul>
            </div>

            <div class="row"></div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input name="boton" type="submit" value="Crear" class="btn btn-primary"  />
                    <a href="/EncuestaTipo"><i class="fa fa-arrow-circle-left"></i>Regresar</a>
                </div>
            </div>

            <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
            <script>
                $("#deselectall").on("click", function () {
                    $(".success").prop("checked", false);
                });
                

                $("#selectall").on("click", function () {
                    $(".success").prop("checked", true);
                });



            </script>
            @section scripts{
                <script>

                    var GenerateLink = function () {
                        var params = { url: '/EncuestaTipo/GeneratePassword', type: 'GET', dataType: 'json' };
                        var e = Survey.Main.CargaDatos(params);
                        var result = JSON.parse(e);
                        console.info(result);
                        var str = window.location.origin + "/Encuesta?Link=";
                        //+ $('#IdEncuesta').val();
                        result = str + result.pwd;
                        $('#Link').val(result);
                    }
                    var GenerateLink2 = function () {
                        var params = { url: '/EncuestaTipo/GeneratePassword', type: 'GET', dataType: 'json' };
                        var e = Survey.Main.CargaDatos(params);
                        var result = JSON.parse(e);
                        console.info(result);
                        var str = window.location.origin + "/LoginEncuesta?Link=";
                        //+ $('#IdEncuesta').val();
                        result = str + result.pwd;
                        $('#Link2').val(result);
                    }
                    //function verificar() {
                    //    var suma = 0;
                    //    var los_cboxes = document.getElementsByName('certezas');
                    //    for (var i = 1, j = los_cboxes.length; i < j; i++) {

                    //        if (los_cboxes[i].checked == true) {
                    //            suma++;
                    //        }
                    //    }

                    //    if (suma == 0) {
                    //        alert('debe seleccionar una casilla');
                    //        console.log("falla");
                    //        return false;
                    //    } else {
                    //        console.log("bien");
                    //        alert(suma);
                    //        return true;
                    //    }

                    //}

                    $('form').submit(function (e) {
                        // si la cantidad de checkboxes "chequeados" es cero,
                        // entonces se evita que se envíe el formulario y se
                        // muestra una alerta al usuario
                        if ($('input[name=certezas]:checked').length === 0) {
                            e.preventDefault();
                            alert('Debe seleccionar al menos un topico');
                        }
                    });


                    //this.ValidarGuardarPersonales = function () {
                    //    e.preventDefault();
                    //    var contador = 0;
                    //    $('#step-1 .requerido').each(function () {
                    //        if ($(this).val() == '' || $(this).val() == null) {
                    //            console.info($(this).attr('name'))
                    //            $(this).addClass('alert alert-danger');
                    //            contador++;
                    //            $('.info-personales').html('<div class="alert alert-danger">Los datos son obligatorios</div>');
                    //        }
                    //    });

                    //    return contador > 0 ? false : true;
                    //    console.info(contador);
                    //}
                </script>

            }
            <style>
                /* The switch - the box around the slider */
                .switch {
                    position: relative;
                    display: inline-block;
                    width: 60px;
                    height: 34px;
                    float: right;
                }

                    /* Hide default HTML checkbox */
                    .switch input {
                        display: none;
                    }

                /* The slider */
                .slider {
                    position: absolute;
                    cursor: pointer;
                    top: 0;
                    left: 0;
                    right: 0;
                    bottom: 0;
                    background-color: #ccc;
                    -webkit-transition: .4s;
                    transition: .4s;
                }

                    .slider:before {
                        position: absolute;
                        content: "";
                        height: 26px;
                        width: 26px;
                        left: 4px;
                        bottom: 4px;
                        background-color: white;
                        -webkit-transition: .4s;
                        transition: .4s;
                    }

                input.default:checked + .slider {
                    background-color: #444;
                }

                input.primary:checked + .slider {
                    background-color: #2196F3;
                }

                input.success:checked + .slider {
                    background-color: #8bc34a;
                }

                input.info:checked + .slider {
                    background-color: #3de0f5;
                }

                input.warning:checked + .slider {
                    background-color: #FFC107;
                }

                input.danger:checked + .slider {
                    background-color: #f44336;
                }

                input:focus + .slider {
                    box-shadow: 0 0 1px #2196F3;
                }

                input:checked + .slider:before {
                    -webkit-transform: translateX(26px);
                    -ms-transform: translateX(26px);
                    transform: translateX(26px);
                }

                /* Rounded sliders */
                .slider.round {
                    border-radius: 34px;
                }
            </style>
        </div>
 
                        }


