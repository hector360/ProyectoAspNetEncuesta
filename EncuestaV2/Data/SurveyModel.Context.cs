//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EncuestaV2.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SurveyEntities : DbContext
    {
        public SurveyEntities()
            : base("name=SurveyEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<EncuestaCertezas> EncuestaCertezas { get; set; }
        public virtual DbSet<EncuestaTipo> EncuestaTipo { get; set; }
        public virtual DbSet<Paises> Paises { get; set; }
        public virtual DbSet<PreguntaRespuestas> PreguntaRespuestas { get; set; }
        public virtual DbSet<Preguntas> Preguntas { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<PreguntaTipo> PreguntaTipo { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<Empresas> Empresas { get; set; }
        public virtual DbSet<UsuarioAdmin> UsuarioAdmin { get; set; }
        public virtual DbSet<FechaEncuesta> FechaEncuesta { get; set; }
        public virtual DbSet<UsuarioRespuestas> UsuarioRespuestas { get; set; }
        public virtual DbSet<Certezas> Certezas { get; set; }
        public virtual DbSet<NivelCertezas> NivelCertezas { get; set; }
    
        public virtual ObjectResult<GetPreguntas_Result> GetPreguntas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPreguntas_Result>("GetPreguntas");
        }
    
        public virtual int GuardarPreguntasRespuestas(Nullable<int> idPregunta, string texto, Nullable<bool> activo, Nullable<bool> correcta)
        {
            var idPreguntaParameter = idPregunta.HasValue ?
                new ObjectParameter("IdPregunta", idPregunta) :
                new ObjectParameter("IdPregunta", typeof(int));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            var correctaParameter = correcta.HasValue ?
                new ObjectParameter("Correcta", correcta) :
                new ObjectParameter("Correcta", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarPreguntasRespuestas", idPreguntaParameter, textoParameter, activoParameter, correctaParameter);
        }
    
        public virtual ObjectResult<GetPreguntasByEncuesta_Result> GetPreguntasByEncuesta(Nullable<int> idEncuesta)
        {
            var idEncuestaParameter = idEncuesta.HasValue ?
                new ObjectParameter("IdEncuesta", idEncuesta) :
                new ObjectParameter("IdEncuesta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPreguntasByEncuesta_Result>("GetPreguntasByEncuesta", idEncuestaParameter);
        }
    
        public virtual int GuardarUsuarioRespuestas(Nullable<int> idPregunta, Nullable<int> idPreguntaRespuesta, Nullable<int> idUsuario, Nullable<int> idEncuesta, Nullable<int> idFechaEncuesta)
        {
            var idPreguntaParameter = idPregunta.HasValue ?
                new ObjectParameter("IdPregunta", idPregunta) :
                new ObjectParameter("IdPregunta", typeof(int));
    
            var idPreguntaRespuestaParameter = idPreguntaRespuesta.HasValue ?
                new ObjectParameter("IdPreguntaRespuesta", idPreguntaRespuesta) :
                new ObjectParameter("IdPreguntaRespuesta", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var idEncuestaParameter = idEncuesta.HasValue ?
                new ObjectParameter("IdEncuesta", idEncuesta) :
                new ObjectParameter("IdEncuesta", typeof(int));
    
            var idFechaEncuestaParameter = idFechaEncuesta.HasValue ?
                new ObjectParameter("IdFechaEncuesta", idFechaEncuesta) :
                new ObjectParameter("IdFechaEncuesta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarUsuarioRespuestas", idPreguntaParameter, idPreguntaRespuestaParameter, idUsuarioParameter, idEncuestaParameter, idFechaEncuestaParameter);
        }
    
        public virtual ObjectResult<ObtenerCalificacion_Result> ObtenerCalificacion(Nullable<int> idUsuario, Nullable<int> idEncuesta)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var idEncuestaParameter = idEncuesta.HasValue ?
                new ObjectParameter("IdEncuesta", idEncuesta) :
                new ObjectParameter("IdEncuesta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerCalificacion_Result>("ObtenerCalificacion", idUsuarioParameter, idEncuestaParameter);
        }
    
        public virtual int ActualizarFechaFinal(Nullable<int> idFechaEncuesta)
        {
            var idFechaEncuestaParameter = idFechaEncuesta.HasValue ?
                new ObjectParameter("IdFechaEncuesta", idFechaEncuesta) :
                new ObjectParameter("IdFechaEncuesta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarFechaFinal", idFechaEncuestaParameter);
        }
    
        public virtual ObjectResult<GetCertezas_Result> GetCertezas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCertezas_Result>("GetCertezas");
        }
    
        public virtual ObjectResult<CalculoFechas_Result> CalculoFechas(Nullable<int> idUsuario, Nullable<int> idEncuesta)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var idEncuestaParameter = idEncuesta.HasValue ?
                new ObjectParameter("IdEncuesta", idEncuesta) :
                new ObjectParameter("IdEncuesta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CalculoFechas_Result>("CalculoFechas", idUsuarioParameter, idEncuestaParameter);
        }
    }
}
